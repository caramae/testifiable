- model_class = Experiment
.container
  .page-header
    %h3=t '.title', :default => model_class.model_name.human.titleize

  %p
    %strong= 'Question:'
    = "What is the impact of " + @experiment.action
    = " vs. " + @experiment.control
    = " on " + @experiment.outcome
    = " as measured in " + @experiment.unit + '?'
    %br
    %strong= 'Category:'
    = @experiment.category
    %br
    %strong= 'Prerequisites:'
    = @experiment.prereqs.empty? ? "None" : @experiment.prereqs
    %br
    %strong= 'Duration of each trial:'
    = @experiment.timeframe.to_s + " " + @experiment.timeframe_units
    %br
    %strong= 'Delay between trials:'
    -if @experiment.timeinterval=="-1"
      One trial per participant
    -elsif @experiment.timeinterval=="0"
      None
    -elsif @experiment.timeinterval=="1"
      1 hour
    -else
      1 day
    %br
    %strong= 'Creator:'
    =link_to User.find(@experiment.author).name, user_path(User.find(@experiment.author))
    %br
    %strong= 'Visibility:'
    = @experiment.is_public ? 'Public' : 'Private'
    %br
    -if !@experiment.permits_enrollment(@current_user.id)
      -if !@experiment.get_enroll(@current_user.id).next_time.nil? && @experiment.get_enroll(@current_user.id).next_time > DateTime.now
        %emphasis= "You may re-enroll in"
        -if ((@experiment.get_enroll(@current_user.id).next_time - DateTime.now) / 1.hour).floor > 0
          &= "#{pluralize(((@experiment.get_enroll(@current_user.id).next_time - DateTime.now) / 1.hour).round, "hour")}"
        -else
          &= "#{pluralize(((@experiment.get_enroll(@current_user.id).next_time - DateTime.now) / 1.minute).round, "minute")}"
      -else
        %emphasis= "You have already participated in this experiment and cannot join again."

  %br
  %br
  .form-actions
    = link_to t('.back', :default => t("helpers.links.back")), experiments_path, :class => 'btn'

    -if @current_user
      -if @experiment.is_enrolled(@current_user.id)
        = link_to "Unenroll", {:action=>'unenroll', :id=>@experiment.id}, :method=>:post, :class => 'btn'
      -elsif @experiment.first_enrollment(@current_user.id)
        =link_to "Enroll", {:action=>'enroll', :id=>@experiment.id}, :method=>:post, :confirm => @experiment.prereqs.empty? ? nil : "You may only enroll in this experiment if you meet the following conditions:\n"+@experiment.prereqs, :class=>"btn"
      -elsif @experiment.permits_enrollment(@current_user.id)
        =link_to "Re-enroll", {:action=>'reenroll', :id=>@experiment.id}, :method=>:post, :confirm => @experiment.prereqs.empty? ? nil : "You may only enroll in this experiment if you meet the following conditions:\n"+@experiment.prereqs, :class=>"btn"

      -if @current_user.is_admin || (@experiment.author == @current_user.id && @experiment.datapoints.empty?)
        = link_to t('.edit', :default => t("helpers.links.edit")), edit_experiment_path(@experiment), :class => 'btn'
        = link_to t('.destroy', :default => t("helpers.links.destroy")), experiment_path(@experiment), :method => "delete", :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :class => 'btn btn-danger whiteText'
      /-if @current_user && @current_user.is_admin
      /  = link_to t('.approve', :default => t("helpers.links.approve")), approve_experiment_path(@experiment), :class => 'btn'