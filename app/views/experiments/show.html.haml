- model_class = Experiment
.container
  .page-header
    %h3= "What is the impact of " + @experiment.action + " on " + @experiment.outcomes.first.name + "?"
  
  .row.settings
    .span8.pull-left
      %strong= 'Possible actions:'
      = @experiment.action + " vs. " + @experiment.control
      %br
      %strong= 'Outcomes of interest:'
      -if @experiment.outcomes.count == 0
        = @experiment.outcomes.first.name + " as measured in " + @experiment.outcomes.first.unit + '?'
      -else
        -@experiment.outcomes.each do |outcome|
          -if outcome == @experiment.outcomes.last && @experiment.outcomes.count != 1
            = "and "
          -elsif outcome != @experiment.outcomes.first
            %span>,&nbsp;
          = outcome.name
          -if !outcome.unit.empty?
            = "(measured in " + outcome.unit + ")"
      %br
      %strong= 'Category:'
      = @experiment.category
      %br
      %strong= 'Prerequisites:'
      = @experiment.prereqs.empty? ? "None" : @experiment.prereqs
      %br
      %strong= 'Number of active participants:'
      = @experiment.enrolls.count
      %br
      %strong= 'Number of datapoints:'
      = @experiment.datapoints.count
      %br
      %strong= 'Creator:'
      =link_to User.find(@experiment.author).name, user_path(User.find(@experiment.author))
      %br
      %br

      -if @current_user.nil?
        %em= "Log in to enroll!"
      -elsif !@experiment.permits_enrollment(@current_user.id)
        -if !@experiment.get_enroll(@current_user.id).next_time.nil? && @experiment.get_enroll(@current_user.id).next_time > DateTime.now
          %em= "You may reenroll in"
          -if ((@experiment.get_enroll(@current_user.id).next_time - DateTime.now) / 1.hour).floor > 0
            %em= "#{pluralize(((@experiment.get_enroll(@current_user.id).next_time - DateTime.now) / 1.hour).round, "hour")}"
          -else
            %em= "#{pluralize(((@experiment.get_enroll(@current_user.id).next_time - DateTime.now) / 1.minute).round, "minute")}"
        -else
          %em= "You have already participated in this experiment and cannot join again."
    
    -if @current_user && ((@experiment.author==@current_user.id) || @current_user.is_admin)
      .span4.pull-right
        %h5= "Other settings"
        %strong= 'Duration of each trial:'
        = @experiment.timeframe.to_s + " " + @experiment.timeframe_units
        %br
        %strong= 'Limit on multiple trials:'
        -if @experiment.timeinterval=="-1"
          One trial per participant
        -elsif @experiment.timeinterval=="0"
          None
        -elsif @experiment.timeinterval=="1"
          1 hour apart
        -else
          1 day apart
        %br
        %strong= 'Visibility:'
        = @experiment.is_public ? 'Public' : 'Private'
        %br
        %br

  -if @current_user && ((@experiment.author==@current_user.id) || @current_user.is_admin)
    .row
      .span6
        %table.table
          %thead
            %tr
              %th= 'Assignment'
              %th= 'Action'
              %th= '#'
          %tbody
            %tr
              %td{:rowspan => "2"}= @experiment.action.humanize
              %td= @experiment.action.humanize
              %td= @experiment.count_datapoints(1, true)
            %tr
              %td= @experiment.control.humanize
              %td= @experiment.count_datapoints(1, false)
            %tr
              %td{:rowspan => "2"}= @experiment.control.humanize
              %td= @experiment.action.humanize
              %td= @experiment.count_datapoints(2, false)
            %tr
              %td= @experiment.control.humanize
              %td= @experiment.count_datapoints(2, true)
    = high_chart("my_id4", @chart)
    %br

  -if @current_user
    -if @experiment.is_enrolled(@current_user.id)
      = link_to t('helpers.links.unenroll'), {:action=>'unenroll', :id=>@experiment.id}, :method=>:post, confirm: "Unenroll", :class => 'btn'
    -elsif @experiment.first_enrollment(@current_user.id)
      = link_to t('helpers.links.enroll'), {:action=>'enroll', :id=>@experiment.id}, method: :post, confirm: @experiment.prereqs.empty? ? nil : "Prereqs #{@experiment.prereqs}", hi: "enroll",  :class=>"btn btn-primary whiteText"
    -elsif @experiment.permits_enrollment(@current_user.id)
      = link_to t('helpers.links.reenroll'), {:action=>'reenroll', :id=>@experiment.id}, :method=>:post, :class=>"btn btn-primary whiteText"

  .form-actions
    = link_to (raw t('helpers.links.back')), :back, :class => 'btn'

    -if @current_user && (@current_user.is_admin || (@experiment.author == @current_user.id && @experiment.datapoints.empty?))
      = link_to (raw t('helpers.links.edit')), edit_experiment_path(@experiment), :class => 'btn'
      = link_to (raw t('helpers.links.delete')), experiment_path(@experiment), :method => "delete", confirm: "Delete experiment", :class => 'btn btn-danger whiteText'
    /-if @current_user && @current_user.is_admin
    /  = link_to t('.approve', :default => t("helpers.links.approve")), approve_experiment_path(@experiment), :class => 'btn'