= form_for @experiment, :html => {} do |f|
  -if @experiment.errors.any?
    #error_explanation
      %h2= "There are #{pluralize(@experiment.errors.count, "error")}:"
      %ul
        - @experiment.errors.full_messages.each do |msg|
          %li= msg

  .content.row
    .span9
      %h5='What is the impact of'
      =f.text_field :action, :class => 'text_field span6', :placeholder => 'Action (eg. "Exercising at least 20 mins a day")', :id=>'expAction', :autocomplete => :off
      %br
      .input-prepend
        %span.add-on="vs."
        = f.text_field :control, :class => 'text_field span6', :placeholder => 'Control (eg. "Exercising less than 20 mins a day")', :id=>'expControl', :autocomplete => :off
      %br
      = f.fields_for :outcomes do |builder|
        =render "outcome_fields", :f => builder
      .btn.btn-mini= link_to_add_fields (raw t("helpers.links.new.outcome")), f, :outcomes
      %br
      = link_to "Next", "#", class: "btn btn-primary advanced-options-space", id: "next-button", onclick: "showNext()"
      #next-form-inputs.hide
        %p
          You'll be texted at
          = current_user.phone_number
          to be randomized to actions and prompted to report data.
        %h5='Randomly assign me to'
        =f.text_field :action, :class => 'text_field span4', disabled: true, id: "action-duplicate"
        OR
        = f.text_field :control, :class => 'text_field span4', disabled: true
        %p
          every
          = f.select :exp_increment, ['day', 'week','every other week']
          at
          = f.select :exp_increment_time, ['00:00','01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00']
          .hide#day-of-week
            on 
            = f.select :day_of_week, ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
        %p
          End experiment on
          = f.text_field :end_time, class: "datepicker"
      %br

      = link_to "Advanced options", "#", id: 'hidden-advanced', class: "btn btn success advanced-options-space", onclick: "showAdvanced()"
      %br
      = link_to "Hide Advanced options", "#", id: "visible-advanced", class: "btn btn success advanced-options-space hide", onclick: "hideAdvanced()"
      .advanced-options.hide
        %br
        .field
          Minimum time between enrolling and entering data (to prevent cheating)
          %i{:class => "fa fa-info-circle", :title => "Participants will not be able to record data until this time has elapsed since enrollment."}
          %br
          = f.text_field :timeframe, :class => 'text_field span_tiny', :autocomplete => :off
          = f.select :timeframe_units, ['minutes', 'hours', 'days']
        .field
          Category
          = f.select :category, ['','Education', 'Health', 'Lifestyle', 'Politics', 'Work', 'Other']
        .field
          = f.check_box :timeinterval, {}, "-1", "0"
          Restrict to one trial per person
        .field
          Is the outcome of the experiment:
          %br
            = f.radio_button :outcome_type, "0" 
            qualitative 
            %br
            = f.radio_button :outcome_type, "1"
            quantitative
        .field
          Are you gathering data from:
          %br
            = f.radio_button :data_sources, "0" 
            one person 
            %br
            = f.radio_button :data_sources, "1"
            multiple people
    .span3
      %br
      %strong= 'Advanced options'
      %br
      -#
        .field
          Minimum time between trials:
          %i{:class => "fa fa-info-circle", :title => "If your experiment has a short duration, you may prevent users from making repeated and frivolous entries by setting a delay between the end of a trial and the beginning of the next."}
          %br
          = f.radio_button :timeinterval, "0", :checked => true
          None
          %br
          = f.radio_button :timeinterval, "1"
          Hourly
          %br
          = f.radio_button :timeinterval, "2"
          Daily
          %br
          = f.radio_button :timeinterval, "-1"
          Restrict to one trial per person
          %br
      .field
        .contentBlock='Conditions for participation in the experiment'
        = f.text_area :prereqs, :class => 'text_area span3', :rows => 3
      .field
        = f.check_box :is_public, {}, false, true
        %span='Make this experiment private'
      .field
        = f.check_box :must_email, {}, true, false
        %span='Mandate email notifications for this experiment'
      -if @current_user.is_admin
        .field
          = f.check_box :spanning_action, {}, false, true
          %span='Check if action and control do not span all possible scenarios'

  .form-actions
    = f.submit nil, :class => 'btn btn-primary'
    = link_to t('.cancel', :default => t("helpers.links.cancel")), experiments_path, :class => 'btn'
:javascript
  function showNext() {
    $('#next-form-inputs').show();
    $('#action-duplicate')[0].value = $('#expAction')[0].value
    $('#experiment_control')[0].value = $('#expControl')[0].value
    $('#next-button').hide();
  }
  function showAdvanced () {
    $('.advanced-options').show();
    $('#hidden-advanced').hide()
    $('#visible-advanced').show()
  }
  function hideAdvanced () {
    $('.advanced-options').hide();
    $('#visible-advanced').hide()
    $('#hidden-advanced').show()
  }
  
  $('form select[id=experiment_exp_increment]').change(function(){
    if ($('form select option:selected').val() == 'week'){
      $('#day-of-week').show();
    }else{
      $('#day-of-week').hide();
    }
  });