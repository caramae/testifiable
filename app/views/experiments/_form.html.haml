= form_for @experiment, :html => {} do |f|
  - if @experiment.errors.any?
    #error_explanation
      %h2= "There are #{pluralize(@experiment.errors.count, "error")}:"
      %ul
        - @experiment.errors.full_messages.each do |msg|
          %li= msg

  .field
    /%h5="Type of experiment:"
    /= f.radio_button :type, "Quantitative"
    /= f.radio_button :type, "Qualitative"
    /= f.hidden_field :_destroy
    /= link_to_function "remove", "remove_fields(this)"
    /Qualitative
  
  .content.row
    .span9
      %h5='What is the impact of'
      =f.text_field :action, :class => 'text_field span6', :placeholder => 'Action (eg. "Exercising 20 mins a day")', :id=>'expAction', :autocomplete => :off
      %br
      .input-prepend
        %span.add-on="vs."
        = f.text_field :control, :class => 'text_field span6', :placeholder => 'Control (eg. "Exercising 0 mins a day")', :id=>'expControl', :autocomplete => :off
      %br
      = f.fields_for :outcomes do |builder|
        =render "outcome_fields", :f => builder
      .btn.btn-mini= link_to_add_fields "Add Outcome", f, :outcomes
      %br
      .field
        Amount of time to perform the experiment (from the start of the action to the outcome).
        %i{:class => "fa fa-info-circle", :title => "Participants will not be able to record data until this time has elapsed since enrollment."}
        %br
        = f.text_field :timeframe, :class => 'text_field span_tiny', :autocomplete => :off
        = f.select :timeframe_units, ['minutes', 'hours', 'days']
      .field
        Category
        = f.select :category, ['','Education', 'Health', 'Lifestyle', 'Politics', 'Work', 'Other']

    .span3
      %br
      %strong= 'Advanced options'
      %br
      .field
        Minimum time between trials:
        %i{:class => "fa fa-info-circle", :title => "If your experiment has a short duration, you may prevent users from making repeated and frivolous entries by setting a delay between the end of a trial and the beginning of the next."}
        %br
        = f.radio_button :timeinterval, "0", :checked => true
        None
        %br
        = f.radio_button :timeinterval, "1"
        Hourly
        %br
        = f.radio_button :timeinterval, "2"
        Daily
        %br
        = f.radio_button :timeinterval, "-1"
        Restrict to one trial per person
        %br
      .field
        .contentBlock='Conditions for participation in the experiment'
        = f.text_area :prereqs, :class => 'text_area span3', :rows => 3
      .field
        = f.check_box :is_public, {}, false, true
        %span='Make this experiment private'

  .form-actions
    = f.submit "Create", :class => 'btn btn-primary'
    = link_to t('.cancel', :default => t("helpers.links.cancel")), experiments_path, :class => 'btn'